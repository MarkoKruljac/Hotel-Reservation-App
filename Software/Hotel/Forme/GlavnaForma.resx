<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        nE7nHxINSpitGfWoAAAAAElFTkSuQmCC
</value>
  </data>
</root>